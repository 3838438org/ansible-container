---
- hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  # force_handlers: true
  tasks:
    - name: Make temporary workspace
      tempfile:
        path: "{{ lookup('env', 'TMPDIR')|default(omit) }}"
        state: directory
        suffix: "{{ item.name }}"
      with_items: "{{ distros }}"
      register: tempdirs
      notify: "Cleanup temp dirs"
      tags: always
    - name: Make context dirs
      file:
        state: directory
        name: "{{ item.1.path }}/{{ item.0.name }}"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags: always
    - name: Make project dirs
      file:
        state: directory
        name: "{{ item.1.path }}/test-{{ item.0.name }}"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags: always
    - name: Render Dockerfile
      template:
        src: "content/Dockerfile.j2"
        dest: "{{ item.1.path }}/{{ item.0.name }}/Dockerfile"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags: always
    - name: Copy build context
      synchronize:
        src: "{{ playbook_dir }}/content/"
        dest: "{{ item.1.path }}/{{ item.0.name }}"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags: always
    - name: Run ansible-container import
      command: >
        ansible-container --debug --project-path
        {{ item.1.path|quote }}/test-{{ item.0.name|quote }} import
        {{ item.1.path|quote }}/{{ item.0.name|quote }}
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags: always
    - name: Validate import
      command: pytest tests/validate_import.py
      environment:
        TO_AC: "{{ item.1.path|quote }}/test-{{ item.0.name|quote }}"
        DISTRO_DATA: "{{ item.0|to_json }}"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags:
        - validate_import
    - name: Run ansible-container build
      command: >
        ansible-container --debug --project-path
        {{ item.1.path|quote }}/test-{{ item.0.name|quote }} build --no-cache
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags:
        - build
        - build_no_validate
    - name: Validate build
      command: pytest tests/validate_build.py
      environment:
        TO_AC: "{{ item.1.path|quote }}/test-{{ item.0.name|quote }}"
        DISTRO_DATA: "{{ item.0|to_json }}"
      with_together:
        - "{{ distros }}"
        - "{{ tempdirs.results }}"
      tags:
        - build
        - validate_build
  handlers:
    - name: Cleanup temp dirs
      file:
        name: "{{ item.path }}"
        state: absent
      with_items: "{{ tempdirs.results }}"

